import Param.Parameters;
import Model.nn;

class classify
{
	public static void main(String[] args)
	{
		double X[][] = {{4.5192,2.4443,4.2409,5.8097,6.4423,5.8097,6.3917,6.8725,6.7966,8.163,7.4038,7.6316,7.7581,6.5688,5.3543,4.4686,2.9757,2.4443,0.9008,2.1154,3.2794,4.165,4.8482,3.33,5.1518,6.2652,6.2652,7.2014,7.6569,6.1387,4.4939,4.8735,5.5314,6.0121,7.1508,7.7075,8.3148,8.5172,8.7449,7.8593,6.999,5.5061,4.9241,6.6447,7.6822,8.0364,8.9221,7.8593,6.5941,6.0374,2.7227,1.9383,1.6852,4.3168,3.4312,5.4808,4.1144,3.2034,4.1144,5.1012,4.8988,5.9615,5.7591,6.6953,5.7338,6.6194,7.2014,7.2014,8.5931,7.7581,7.7581,5.1012,4.2156,3.4818,2.3684,1.7864,0.9008,0.9008,1.9636,1.4069,2.419,2.8745,4.0132,4.6711,5.1771,6.2146,5.4555,5.9868,4.0891,2.3937,1.331,1.7358,2.4443,3.1781,4.6711,5.9868,4.6711,7.581,4.6457,4.6457},
					    {2.6487,1.5438,1.899,2.4711,3.359,3.2406,3.8128,4.4441,3.6747,4.7401,3.8917,4.602,5.7265,4.9571,3.9903,3.0236,2.0568,1.2676,1.169,1.7411,1.386,1.5636,1.8793,2.7868,3.5563,4.0693,4.3849,1.5438,2.412,1.7806,1.4057,2.6093,3.0828,3.9311,4.7598,5.3122,5.7068,5.1149,5.4109,3.8128,3.2406,2.9052,2.6882,3.8325,4.5428,5.7857,6.5552,5.253,5.2333,4.7598,4.5822,3.6549,2.9841,4.4244,3.7536,5.2728,4.8387,4.4244,5.3911,6.0817,5.5687,6.4565,6.0028,6.7722,6.6538,7.1471,7.5219,6.8314,7.6206,7.1865,7.7784,7.6009,6.496,5.8055,5.0163,4.1876,3.4379,5.7857,6.3382,4.9571,6.8511,6.0817,7.1668,7.226,8.1533,7.4825,7.0484,8.5084,7.5417,7.2063,6.5355,5.4503,5.8449,4.8979,5.8055,7.3641,6.2592,8.3703,8.5676,8.1676}};
		
		double y[] = 	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
		
		double max = 8.9221;
		double min = 0.9008;
		
		double rng = max-min;
		
		for(int i = 0 ; i < X[0].length; i++)
		{
				X[0][i] = 1-((max-X[0][i])/rng);
		}
		
		max = 8.5676;
		min = 1.169;
	
		rng = max-min;
		
		for(int i = 0 ; i < X[1].length; i++)
		{
				X[1][i] = 1-((max-X[1][i])/rng);
		}
				
		int[] layerDims = {3, 3, 1};
		int iter = 19000;
		double lr = (double)0.0075;
		Parameters[] parameters = new Parameters[2];
		for (int i = 0; i < parameters.length; i++)
		{
			parameters[i] = new Parameters();
		}
		nn model = new nn();
		
		parameters = model.fit(X, y, layerDims, lr, iter);

		double test[][] = {{2.6457},
						   {2.6476}};
	
		X = test;
		
		max = 8.9221;
		min = 0.9008;
		
		rng = max-min;
		
		for(int i = 0 ; i < X[0].length; i++)
		{
				X[0][i] = 1-((max-X[0][i])/rng);
		}
		
		max = 8.5676;
		min = 1.169;
	
		rng = max-min;
		
		for(int i = 0 ; i < X[1].length; i++)
		{
				X[1][i] = 1-((max-X[1][i])/rng);
		}
		
		double[] ans = model.predict(X, parameters);
		
		for (int i = 0; i < ans.length; i++)
		{
			ans[i] = ans[i]>0.5?1.0:0.0;
			System.out.println(ans[i]);
		}
		
		
	}
}